# Generated by rust2rpm 27
## NOTE: tests require files from erg_compiler crate
%bcond check 0

%global crate erg

Name:           %{crate}
Version:        0.6.53
Release:        %autorelease
Summary:        Erg programming language

License:        MIT OR Apache-2.0
URL:            https://crates.io/crates/erg
Source:         %{crates_source}

BuildRequires:  cargo-rpm-macros >= 24
BuildRequires:  python3.11

Requires:       python3.11

%global _description %{expand:
The Erg programming language.}

%description %{_description}


%files
%license LICENSE-APACHE
%license LICENSE-MIT
%license assets/LICENSE
%license doc/LICENSE
%license LICENSE.dependencies
%doc CODE_OF_CONDUCT.md
%doc CONTRIBUTING.md
%doc README.md
%doc README_JA.md
%doc README_zh-CN.md
%doc README_zh-TW.md
%doc SECURITY.md
%doc THIRD_PARTY_CREDITS.md
%doc TODO.md
%{_bindir}/erg

%package       -n rust-%{name}-devel
Summary:        %{summary}
BuildArch:      noarch

%description    -n rust-%{name}-devel %{_description}

This package contains library source intended for building other packages which
use the "%{crate}" crate.

%files          -n rust-%{name}-devel
%license %{crate_instdir}/LICENSE-APACHE
%license %{crate_instdir}/LICENSE-MIT
%license %{crate_instdir}/assets/LICENSE
%license %{crate_instdir}/doc/LICENSE
%doc %{crate_instdir}/CODE_OF_CONDUCT.md
%doc %{crate_instdir}/CONTRIBUTING.md
%doc %{crate_instdir}/README.md
%doc %{crate_instdir}/README_JA.md
%doc %{crate_instdir}/README_zh-CN.md
%doc %{crate_instdir}/README_zh-TW.md
%doc %{crate_instdir}/SECURITY.md
%doc %{crate_instdir}/THIRD_PARTY_CREDITS.md
%doc %{crate_instdir}/TODO.md
%{crate_instdir}/

%package     -n rust-%{name}+default-devel
Summary:        %{summary}
BuildArch:      noarch

%description -n rust-%{name}+default-devel %{_description}

This package contains library source intended for building other packages which
use the "default" feature of the "%{crate}" crate.

%files       -n rust-%{name}+default-devel
%ghost %{crate_instdir}/Cargo.toml

%package     -n rust-%{name}+backtrace-devel
Summary:        %{summary}
BuildArch:      noarch

%description -n rust-%{name}+backtrace-devel %{_description}

This package contains library source intended for building other packages which
use the "backtrace" feature of the "%{crate}" crate.

%files       -n rust-%{name}+backtrace-devel
%ghost %{crate_instdir}/Cargo.toml

%package     -n rust-%{name}+debug-devel
Summary:        %{summary}
BuildArch:      noarch

%description -n rust-%{name}+debug-devel %{_description}

This package contains library source intended for building other packages which
use the "debug" feature of the "%{crate}" crate.

%files       -n rust-%{name}+debug-devel
%ghost %{crate_instdir}/Cargo.toml

%package     -n rust-%{name}+els-devel
Summary:        %{summary}
BuildArch:      noarch

%description -n rust-%{name}+els-devel %{_description}

This package contains library source intended for building other packages which
use the "els" feature of the "%{crate}" crate.

%files       -n rust-%{name}+els-devel
%ghost %{crate_instdir}/Cargo.toml

%package     -n rust-%{name}+experimental-devel
Summary:        %{summary}
BuildArch:      noarch

%description -n rust-%{name}+experimental-devel %{_description}

This package contains library source intended for building other packages which
use the "experimental" feature of the "%{crate}" crate.

%files       -n rust-%{name}+experimental-devel
%ghost %{crate_instdir}/Cargo.toml

%package     -n rust-%{name}+full-devel
Summary:        %{summary}
BuildArch:      noarch

%description -n rust-%{name}+full-devel %{_description}

This package contains library source intended for building other packages which
use the "full" feature of the "%{crate}" crate.

%files       -n rust-%{name}+full-devel
%ghost %{crate_instdir}/Cargo.toml

%package     -n rust-%{name}+full-repl-devel
Summary:        %{summary}
BuildArch:      noarch

%description -n rust-%{name}+full-repl-devel %{_description}

This package contains library source intended for building other packages which
use the "full-repl" feature of the "%{crate}" crate.

%files       -n rust-%{name}+full-repl-devel
%ghost %{crate_instdir}/Cargo.toml

%package     -n rust-%{name}+gal-devel
Summary:        %{summary}
BuildArch:      noarch

%description -n rust-%{name}+gal-devel %{_description}

This package contains library source intended for building other packages which
use the "gal" feature of the "%{crate}" crate.

%files       -n rust-%{name}+gal-devel
%ghost %{crate_instdir}/Cargo.toml

%package     -n rust-%{name}+japanese-devel
Summary:        %{summary}
BuildArch:      noarch

%description -n rust-%{name}+japanese-devel %{_description}

This package contains library source intended for building other packages which
use the "japanese" feature of the "%{crate}" crate.

%files       -n rust-%{name}+japanese-devel
%ghost %{crate_instdir}/Cargo.toml

%package     -n rust-%{name}+large_thread-devel
Summary:        %{summary}
BuildArch:      noarch

%description -n rust-%{name}+large_thread-devel %{_description}

This package contains library source intended for building other packages which
use the "large_thread" feature of the "%{crate}" crate.

%files       -n rust-%{name}+large_thread-devel
%ghost %{crate_instdir}/Cargo.toml

%package     -n rust-%{name}+log-level-error-devel
Summary:        %{summary}
BuildArch:      noarch

%description -n rust-%{name}+log-level-error-devel %{_description}

This package contains library source intended for building other packages which
use the "log-level-error" feature of the "%{crate}" crate.

%files       -n rust-%{name}+log-level-error-devel
%ghost %{crate_instdir}/Cargo.toml

%package     -n rust-%{name}+parallel-devel
Summary:        %{summary}
BuildArch:      noarch

%description -n rust-%{name}+parallel-devel %{_description}

This package contains library source intended for building other packages which
use the "parallel" feature of the "%{crate}" crate.

%files       -n rust-%{name}+parallel-devel
%ghost %{crate_instdir}/Cargo.toml

%package     -n rust-%{name}+pretty-devel
Summary:        %{summary}
BuildArch:      noarch

%description -n rust-%{name}+pretty-devel %{_description}

This package contains library source intended for building other packages which
use the "pretty" feature of the "%{crate}" crate.

%files       -n rust-%{name}+pretty-devel
%ghost %{crate_instdir}/Cargo.toml

%package     -n rust-%{name}+py_compat-devel
Summary:        %{summary}
BuildArch:      noarch

%description -n rust-%{name}+py_compat-devel %{_description}

This package contains library source intended for building other packages which
use the "py_compat" feature of the "%{crate}" crate.

%files       -n rust-%{name}+py_compat-devel
%ghost %{crate_instdir}/Cargo.toml

%package     -n rust-%{name}+simplified_chinese-devel
Summary:        %{summary}
BuildArch:      noarch

%description -n rust-%{name}+simplified_chinese-devel %{_description}

This package contains library source intended for building other packages which
use the "simplified_chinese" feature of the "%{crate}" crate.

%files       -n rust-%{name}+simplified_chinese-devel
%ghost %{crate_instdir}/Cargo.toml

%package     -n rust-%{name}+traditional_chinese-devel
Summary:        %{summary}
BuildArch:      noarch

%description -n rust-%{name}+traditional_chinese-devel %{_description}

This package contains library source intended for building other packages which
use the "traditional_chinese" feature of the "%{crate}" crate.

%files       -n rust-%{name}+traditional_chinese-devel
%ghost %{crate_instdir}/Cargo.toml

%package     -n rust-%{name}+unicode-devel
Summary:        %{summary}
BuildArch:      noarch

%description -n rust-%{name}+unicode-devel %{_description}

This package contains library source intended for building other packages which
use the "unicode" feature of the "%{crate}" crate.

%files       -n rust-%{name}+unicode-devel
%ghost %{crate_instdir}/Cargo.toml

%prep
%autosetup -n %{crate}-%{version} -p1
%cargo_prep

%generate_buildrequires
%cargo_generate_buildrequires

%build
%cargo_build
%{cargo_license_summary}
%{cargo_license} > LICENSE.dependencies

%install
%cargo_install

%if %{with check}
%check
python3.11 -m venv venv
source venv/bin/activate
# exec_tuple_test --> requires file from erg_compiler crate
%cargo_test -- -- --skip exec_tuple_test --nocapture
#--skip test_vm_embedding
%endif

%changelog
%autochangelog
